#!/usr/bin/env perl

# Parameters supported:       
#                             
# config                      
# autoconf                    
#                             
# Magic markers:              
#%# family=auto               
#%# capabilities=autoconf     
                              
use strict;                   
use warnings;                 
use LWP;                      
use JSON qw/decode_json/;     
                              
=head1 NAME                   
                              
elasticsearch_cache - A munin plugin that collects cache stats of your elasticsearch instances
                              
=head1 APPLICABLE SYSTEMS     
                              
ElasticSearch                 
                              
=head1 CONFIGURATION          

None

=head1 BUGS

None known so far. If you find any, let me know.

=head1 AUTHOR

Tomas Doran (t0m) - c<< <bobtfish@bobtfish.net> >>

=cut

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';
my $port = exists $ENV{'port'} ? $ENV{'port'} : 9200;

my $ua = LWP::UserAgent->new;
$ua->timeout(10);

sub get_json_from_url {
    my $uri = shift;
    my $res = $ua->get($uri, 'Content-Type' => 'application/json' );
    Carp::confess($res->code . " for " . $uri) unless $res->is_success;
    my $data = do { local $@; eval { decode_json($res->content) } };
    die("Could not decode JSON from: " . $res->content) unless $data;
    return $data;
}

my $data = get_json_from_url("http://$host:$port/_nodes");
my $t_data = get_json_from_url("http://$host:$port/_nodes/stats");
my %out = (field_size => 0, filter_size => 0);

foreach my $full_node_name (keys %{$data->{nodes}}) {
    next unless $t_data->{nodes}{$full_node_name};
    if (defined($t_data->{nodes}{$full_node_name}{indices}{cache})) {
        $out{field_size} += $t_data->{nodes}{$full_node_name}{indices}{cache}{field_size_in_bytes};
        $out{filter_size} += $t_data->{nodes}{$full_node_name}{indices}{cache}{filter_size_in_bytes};
    }
}
if ($ARGV[0] and $ARGV[0] eq 'config') {
    print "graph_args --base 1024\n";
    print "graph_title ElasticSearch cache\n";
    print "graph_category elasticsearch\n";
    print "graph_vlabel Bytes\n";

    foreach my $name (keys %out) {
        print "$name.label $name\n"."$name.type GAUGE\n";
    }
}
elsif (!$ARGV[0] || $ARGV[0] eq 'autoconf') {
    foreach my $name (keys %out) {
        print "$name.value " . $out{$name} . "\n";
    }
}

exit(0);
